#include <stdio.h>
#include <string.h>

int main(){
    
    int i = 0, n, positivos = 0, negativos = 0, nulos = 0, soma = 0;
    float media = 0;
    
    
    while(i < 10){
    	printf("%d - Digite o Numero: ", i+1);
    	scanf("%d", &n);
    	
    	if(n != 0){
			if(n > 0)
				positivos++;
			else{
				negativos++;
				media = media + n;
			}
			soma = soma + n;
		} else
			nulos++;
			
		i++;
	}
	
	printf("\nTotal de Positivos: %d\n", positivos);
	printf("Total de Negativos: %d\n", negativos);
	printf("Total de Nulos: %d\n", nulos);
	media = media/i;
	printf("Media dos Negativos: %.1f\n", media);
	printf("Soma dos Numeros: %d\n", soma);
    
    return 0;
}


.data
	numero: .asciiz "Digite o numero: "
	positivos: .asciiz "\nTotal de Positivos: "
	negativos: .asciiz "\nTotal de Negativos: "
	nulos: .asciiz "\nTotal de Nulos: "
	media: .asciiz "\nMedia dos Negativos: "
	soma: .asciiz "\nSoma dos Numeros: "

.text
	move $t0, $zero		# i = 0
	move $t2, $zero 	# positivos = 0
	move $t3, $zero 	# negativos = 0
	move $t4, $zero 	# nulos = 0
	move $t5, $zero		# soma = 0
	move $t6, $zero		# media = 0
		
	
	while:
		li $v0, 4	
		la $a0, numero
		syscall		

		li $v0,5	
		syscall		
		move $t1, $v0	
		
		bne $t1, $zero, diferente
		
		addi $t4, $t4, 1
		addi $t0, $t0, 1
		
		j fim
		
		diferente:
			add $t5, $t5, $t1
			slti $t7, $t1, 0
			bne $t7, $zero, negativo
			
			addi $t2, $t2, 1
			addi $t0, $t0, 1
			
			j fim
			
			negativo:
				addi $t3, $t3, 1	
				add  $t6, $t6, $t1
				addi $t0, $t0, 1
		
		fim:
		
		beq $t0, 10, final
		j while	
		
		final: 	
			li $v0, 4
			la $a0, positivos
			syscall 
			
			li $v0, 1
			move $a0, $t2
			syscall
			#---------------
			li $v0, 4
			la $a0, negativos
			syscall 
			
			li $v0, 1
			move $a0, $t3
			syscall
			#---------------
			li $v0, 4
			la $a0, nulos
			syscall 
			
			li $v0, 1
			move $a0, $t4
			syscall
			#---------------
			mtc1 $t6, $f1		# Converte (int)t6 em (float)f1
			cvt.s.w $f1, $f1	#	
			mtc1 $t0, $f2		# Converte (int)t0 em (float)f2
			cvt.s.w $f2, $f2	#
			
			div.s $f3, $f1, $f2
							
			li $v0, 4		
			la $a0, media		
			syscall			
		
			li $v0, 2
			mov.s $f12, $f3
			syscall
			#---------------
			li $v0, 4		
			la $a0, soma
			syscall			
		
			li $v0, 1
			move $a0, $t5
			syscall
