#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <locale.h>
#define L 3
#define C 3
#define T 20

typedef struct{
	char nome[20];
	int tam;
}tApp;

void carregar_Arquivos(tApp *p){
	FILE *leitura;
	int i=0;
	
	leitura = fopen("teste2.txt", "r");
	
	if(leitura == NULL){
		printf("Não possível abrir o arquivo.\n");
		exit(0);
	}
	else{
		while((fscanf(leitura,"%s %d\n", &p[i].nome,&p[i].tam))!= EOF){
			i++;
		}
	}
	
	fclose(leitura);
}

void organizar(tApp *v){
	int i,j;
	tApp aux;
	
	for(i=0;i<T;i++){
		for(j=0;j<T;j++){
			if(v[i].tam < v[j].tam && v[i].tam != 0){
				aux = v[i];
				v[i] = v[j];
				v[j] = aux;
			}
		}
	}	
}

void consultar(tApp *v){
	int i;
	
	for(i=0;i<T;i++){
		if(v[i].tam != 0){
			printf("%s - Tamanho: %d\n", v[i].nome,v[i].tam);
		}
	}
}

void copiarElemento(tApp *orig, tApp *copy, int indic_orig, int indic_copy){
	strcpy(copy[indic_copy].nome,orig[indic_orig].nome);
	copy[indic_copy].tam = orig[indic_orig].tam;
}



void store(tApp *s,tApp *ins, int *cont_tam){
	int resp,i,j=0,num,cont=0,tam_total=150;
	char resp2;
	*cont_tam = 0;
	
	printf("---------------\n1 - Apps Disponíveis\n2 - Consultar\n0 - Voltar\n---------------\n");
	scanf(" %d", &resp);
	while(resp != 0){
		switch(resp){
			case 0:
				return;
			case 1:
				for(i=0;i<T;i++){
					if(s[i].tam != 0){
						printf("%d - %s\n", i+1,s[i].nome);
					}
				}
				while((resp2 != 'n') ||(resp2 != 'N')){
					printf("Digite o número do App que deseja instalar: ");
				    scanf("%d", &num);
				    for(i=0;i<T;i++){
						if(s[num-1].tam == ins[i].tam)
							cont = 1;
					}

					if(cont == 1){
						printf("Aplicativo já Instalado.\n");
						cont = 0;
					}
		   		   	else{
		   		   		*cont_tam += s[num-1].tam;
		   		   		printf("Cont_Tam: %d\n", *cont_tam);
						if(*cont_tam>tam_total){
							printf("Memória cheia. Exclua algum app para instalar outro.\n");
							return; 
						}
						printf("App %s Instalado com sucesso.\n",s[num-1].nome);
						copiarElemento(s,ins,num-1,j);
						j++;
					}
					printf("Deseja instalar outro App? <s,n> ");
					scanf(" %c", &resp2);
				}	
				organizar(ins);
				break;
			case 2:
				consultar(s);
				break;
			default:
				printf("Opção inválida!\n");
				break;
		}
		printf("---------------\n1 - Apps Disponíveis\n2 - Consultar\n0 - Voltar\n---------------\n");
		for(i=0;i<T;i++){
			if(ins[i].tam != 0){
				printf("%s %d\n", ins[i].nome,ins[i].tam);
			}
		}
		scanf(" %d", &resp);
	}
}

void menuprin(tApp *s,tApp *ins){
	int resp,cont_tam;
	printf("---------------\n1 - StoreED\n2 - Meus AppsED\n3 - AppRumED\n---------------\n");
	scanf(" %d", &resp);
	while(resp != 0){
		switch(resp){
			case 1:
				store(s,ins,&cont_tam);
				break;
			case 2:
				//meusApps();
				break;
			case 3:
				//rum();
				break;
			default:
				printf("Opção inválida!\n");
				break;
		};
		printf("---------------\n1 - StoreED\n2 - Meus AppsED\n3 - AppRumED\n---------------\n");
		scanf(" %d", &resp);
	}
}

int main(){
	int i;
	setlocale(LC_ALL,"Portuguese");
	tApp apps_store[T],apps_instalados[T],apps_executando[T];
	
	for(i=0;i<T;i++){
		apps_store[i].tam = 0;
		apps_instalados[i].tam = 0;
		apps_executando[i].tam = 0;
		strcpy(apps_store[i].nome,"");
		strcpy(apps_instalados[i].nome,"");
		strcpy(apps_executando[i].nome,""); 
	}
	
	carregar_Arquivos(&apps_store[0]);
	organizar(&apps_store[0]);
	
	menuprin(&apps_store[0],&apps_instalados[0]);
	return 0;
}
